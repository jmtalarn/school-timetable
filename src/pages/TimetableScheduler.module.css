:root {
	/* tune this if you want wider/narrower columns */
	--day-min: 260px;
}
/* Optional: only enforce min-width + horizontal scroll below a breakpoint
@media (max-width: 900px) {
  :root { --day-min: 280px; }  // can tune per breakpoint
}
*/

.container {
	width: 100%;
	max-width: 820px;
	margin: 0 auto;
	padding: clamp(12px, 2vw, 24px); /* page padding */
}
/* Title */
.container > h2 {
	margin: 4px 0 12px;
	font-size: 22px;
	font-weight: 800;
	text-align: left;
}
.header {
	margin-bottom: 12px;
	font-size: 24px;
	font-weight: 700;
}

.kidRow {
	margin-bottom: 12px;
}

.select {
	border-radius: 6px;
	border: 1px solid #e5e7eb;
	padding: 4px 8px;
}

.gridWrapper {
	/* allow horizontal scroll when total grid width exceeds container */
	overflow-x: auto;
	overflow-y: visible;
	-webkit-overflow-scrolling: touch; /* smoother on iOS */
	border-radius: 8px;
	border: 1px solid #e5e7eb;
	background: #f9fafb;
	padding: 8px;
	/* Contain only horizontal overscroll so sideways swipes stay in the grid,
	   but allow vertical scroll to bubble to the page */
	overscroll-behavior-x: contain;
	overscroll-behavior-y: auto;
}

.grid {
	display: grid;
	/* one column per child; each takes equal width */
	grid-auto-flow: column;
	grid-auto-columns: minmax(var(--day-min), 1fr);
	column-gap: 12px;

	/* let the grid grow beyond the wrapper to trigger horizontal scroll */
	width: max-content;
	min-width: 100%;
}

.columnTitle {
	min-width: var(--day-min);
	margin-bottom: 4px;
	text-align: center;
	font-size: 14px;
	font-weight: 600;
}

.droppable {
	border-radius: 6px;
}

.isOver {
	outline: 2px solid rgba(56, 189, 248, 0.6);
}

.columnInner {
	position: relative;
	cursor: crosshair;
	border-radius: 6px;
	background: #fff;
	overflow: visible;
	min-width: var(--day-min); /* key for consistent column width */
	touch-action: pan-x pan-y; /* let wrapper scroll horizontally and page scroll vertically */
	user-select: none;
	-webkit-user-select: none;
}

.hourLine {
	position: absolute;
	left: 0;
	right: 0;
	border-top: 1px solid #f3f4f6;
}

.hourLineMajor {
	border-top-color: #e5e7eb;
}

.hourLabel {
	position: absolute;
	left: 0;
	top: -9px;
	font-size: 11px;
	color: #6b7280;
	z-index: 6;
}

.hoverBand {
	position: absolute;
	left: 0;
	right: 0;
	background: rgba(56, 189, 248, 0.12);
	border-top: 1px solid rgba(56, 189, 248, 0.35);
	border-bottom: 1px solid rgba(56, 189, 248, 0.35);
	pointer-events: none;
	z-index: 2;
}

.blockWrap {
	position: absolute;
	left: 0;
	right: 0;
	z-index: 5;

	/* Allow a vertical scroll gesture to start on top of a block body. */
	touch-action: pan-y;
	-webkit-tap-highlight-color: transparent;
	will-change: transform;
}

.block {
	position: absolute;
	left: 4px;
	right: 4px;
	user-select: none;
	cursor: move;
	border-radius: 6px;
	border: 1px solid rgba(0, 0, 0, 0.08);
	box-shadow: 0 1px 2px rgba(0, 0, 0, 0.06);
	-webkit-user-drag: none;
	-webkit-tap-highlight-color: transparent;
}
/* A proper, tappable drag handle */
.dragHandle {
	position: absolute;
	right: 12px;
	top: 4px;
	width: 28px;
	height: 20px;
	border: 0;
	background: transparent;
	color: #4b5563;
	cursor: grab;
	line-height: 1;
	border-radius: 6px;
	user-select: none;
	-webkit-user-select: none;
	touch-action: none; /* ensure drag sensor gets the gesture */
}
.dragHandle:active {
	cursor: grabbing;
}

/* Make hit areas bigger on coarse pointers (mobile) */
@media (pointer: coarse) {
	.resizeHandle {
		height: 18px; /* easier to grab */
	}
	.resizeStart {
		top: -9px;
	}
	.resizeEnd {
		bottom: -9px;
	}
	.columnInner {
		cursor: default;
	} /* “crosshair” is weird on touch */
}

.blockHeader {
	display: flex;
	align-items: center;
	justify-content: space-between;
	gap: 6px; /* slightly tighter gap helps on narrow */
	padding: 4px 8px;
	height: 100%;
	font-size: 12px;
	min-width: 0; /* allow children to shrink in flex row */
}

.blockLabel {
	flex: 1 1 auto;
	min-width: 0; /* allow text to shrink within row */
	font-weight: 600;
	text-align: center;

	/* prevent overflow; allow wrapping with nice breaks */
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: normal;
	word-break: break-word;
	hyphens: auto;

	/* (optional) clamp to a few lines; uncomment if you prefer
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  */
}

.blockRightCol {
	flex: 0 0 auto; /* keep delete button column from shrinking into overflow */
	display: flex;
	align-items: center;
	flex-direction: column;
	justify-content: space-between;
	height: 85%;
}

.grip {
	font-size: 11px;
	color: #4b5563;
}

.deleteBtn {
	font-size: 11px;
	color: #4b5563;
	cursor: pointer;
	background: transparent;
	border: none;
	padding: 0;
	line-height: 1;
}
.deleteIcon {
	width: 16px;
	height: 16px;
}
.deleteBtn:hover .deleteIcon {
	filter: brightness(0) saturate(100%) invert(27%) sepia(91%) saturate(747%)
		hue-rotate(358deg) brightness(91%) contrast(85%);
}
.resizeHandle {
	position: absolute;
	left: 0;
	right: 0;
	height: 8px;
	cursor: ns-resize;
	z-index: 10;
	touch-action: none;
	-ms-touch-action: none;
}

.resizeStart {
	top: -4px;
}

.resizeEnd {
	bottom: -4px;
}

.pickerOverlay {
	position: fixed;
	inset: 0;
	display: flex;
	align-items: center;
	justify-content: center;
	background: rgba(0, 0, 0, 0.3);
	z-index: 50;
}

.pickerDialog {
	width: 320px;
	border-radius: 12px;
	background: #fff;
	padding: 16px;
	box-shadow: 0 10px 30px rgba(0, 0, 0, 0.12);
}

.pickerTitle {
	margin-bottom: 8px;
	font-size: 18px;
	font-weight: 600;
}

.pickerList {
	max-height: 520px;
	overflow-y: auto;
	list-style: none;
	padding: 0;
	margin: 0;
}

.pickerItem {
	margin-bottom: 8px;
}

.pickerBtn {
	display: flex;
	width: 100%;
	align-items: center;
	gap: 12px;
	border-radius: 10px;
	border: 1px solid #e5e7eb;
	padding: 8px 12px;
	background: #fff;
	text-align: left;
	cursor: pointer;
}

.pickerDot {
	display: inline-block;
	height: 16px;
	width: 16px;
	border-radius: 4px;
}

.pickerFooter {
	margin-top: 12px;
	text-align: right;
}

.button {
	border-radius: 10px;
	border: 1px solid #e5e7eb;
	padding: 6px 12px;
	background: #fff;
	cursor: pointer;
}

.overlayBox {
	position: relative;
}

.timeBadge {
	position: absolute;
	font-size: 11px;
	color: #fff;
	background: rgba(0, 0, 0, 0.75);
	padding: 2px 6px;
	border-radius: 4px;
}

.timeBadgeTop {
	top: -22px;
	left: 0;
}

.timeBadgeBottom {
	bottom: -22px;
	right: 0;
}

.hint {
	font-size: 14px;
	color: #4b5563;
}
